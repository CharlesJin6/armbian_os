name: Generate Download Index in JSON (admin)
on:
  repository_dispatch:
    types: ["Webindex update"]
  workflow_dispatch:

concurrency:
  group: webindex
  cancel-in-progress: false

jobs:

  Check:

    name: "Check membership"
    runs-on: Linux
    steps:

      - name: "Check membership"
        uses: armbian/actions/team-check@main
        with:
          ORG_MEMBERS: ${{ secrets.ORG_MEMBERS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEAM: "Release manager"

  Webindex:

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    name: "Generate JSON Index"
    runs-on: Linux
    needs: Check
    steps:

      - name: Checkout OS repository
        uses: actions/checkout@v4
        with:
          repository: armbian/os
          fetch-depth: 1
          clean: false

      - name: "Install dependencies"
        run: |

          if ! command -v "gh" > /dev/null 2>&1; then sudo apt-get -y -qq install gh; fi
          if ! command -v "jc" > /dev/null 2>&1; then sudo apt-get -y -qq install jc; fi

      - name: "Stable builds JSON file" # adjust "exposed" property while reading from download
        run: |

          while read element; do
            while read exposed; do
              # fix date and size
              SEARCH=$(echo $element | awk '{ print $3" "$4}')
              REPLACE=$(echo $element | awk '{ print $3"T"$4"Z"}' | sed "s|/|-|g")
              element=$(echo $element | sed "s|$SEARCH|$REPLACE|")              
              SEARCH=$(echo $element | awk '{ print $2}')
              REPLACE=$(echo $element | awk '{ print $2}' | awk '{gsub(/[.|,]/,"");print $NF}')
              element=$(echo $element | sed "s|$SEARCH|$REPLACE|")
              if [[ $element == *$exposed* ]]; then
                echo "$element true"
              else
                echo "$element false"
              fi
            done < exposed.map
          done <<< $(rsync -ar rsync://rsync.armbian.com/dl/) \
          | awk '{ print "\"https://dl.armbian.com/"$4"\"|\""$3"\"|\""$2"\"|\""$5"\"" }' \
          | grep "archive/" \
          | sed '1s/^/"url"|"updatedAt"|"size"|"exposed"\n/' \
          | jc --csv \
          | jq '{"assets": .}' > standard-support.json

      - name: "Nightly and community maintained"
        run: |

          gh release view --json assets --repo github.com/armbian/os        | jq > nightly.json
          gh release view --json assets --repo github.com/armbian/community | jq > community-maintained.json

      - name: "Download and compress torrent files"
        run: |

          SOURCE=$(mktemp -d)
          DESTINATION=$(mktemp -d)
          rsync -zqvr --include="*/archive/*.torrent" --exclude="/*/*/*" --exclude="_*/" --exclude="control" --exclude="quotes.txt" --exclude="*/all-torrents.zip" rsync://rsync.armbian.com/dl/ ${SOURCE}
          find ${SOURCE}/. -mindepth 3 -exec mv -i -- {} ${DESTINATION}/ \;
          zip -qj all-torrents.zip ${DESTINATION}/*.torrent

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            standard-support.json
            nightly.json
            community-maintained.json
            all-torrents.zip

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_UPLOAD }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_ARMBIAN_UPLOAD }}
          if_key_exists: replace

      - name: Upload index
        run: |

          rsync -e "ssh -p ${{ secrets.HOST_UPLOAD_PORT }}" -arvc --remove-source-files standard-support.json nightly.json community-maintained.json all-torrents.zip ${{ secrets.HOST_UPLOAD_USER }}@${{ secrets.HOST_UPLOAD }}:/incoming/json          

          